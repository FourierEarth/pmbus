// TODO: Improve macro hygiene. It doesn't like using `::pmbus::smbus::SmBus`,
// which would be preferred over generating `crate` type-paths from the macro.
use crate::smbus::SmBus;

// This table follows the same order as Appendix I. Command Summary, Table 31, sequential byte order.
//
// <https://pmbusprod.wpenginepowered.com/wp-content/uploads/2022/01/PMBus-Specification-Rev-1-3-1-Part-II-20150313.pdf>
//
// TODO: Process call definitions are probably incorrect. The table does not correspond exactly with the sizes
// defined in the sections specific to each command code. For example, `COEFFICIENTS` is known to be wrong,
// the write data is supposed to be two bytes long, consisting of a command code from this table, and another byte for indicating encoding.
// The response is five bytes, which are defined in another section of the document.
// This is not an immediate concern, the next step for this library is to define types for all
// commands used; Fourier can define types to encode to/from the bytes in either direction.
//
// TODO: Reading into fixed-size byte arrays is up next. However, consider implementing types for conversion beforehand to see how
// the table syntax should pan out. I am expecting closure `op`/`map` functions to handle the conversion,
// defined here, inline in the table. Allowing type-associated constructor functions is also planned.
// For now, all read commands which return slices or arrays are treated as byte vectors.
//
//  | BYTE | COMMAND                   | WRITE_TYPE    | READ_TYPE       | N_BYTES |
pmbus_macros::impl_commands! {
    | 0x00 | PAGE                      | write: u8     | read: u8        | 1  |,
    | 0x01 | OPERATION                 | write: u8     | read: u8        | 1  |,
    | 0x02 | ON_OFF_CONFIG             | write: u8     | read: u8        | 1  |,
    | 0x03 | CLEAR_FAULTS              | send          | _               | 0  |,
    | 0x04 | PHASE                     | write: u8     | read: u8        | 1  |,
    | 0x05 | PAGE_PLUS_WRITE           | write: &[u8]  | _               | _  |,
    | 0x06 | PAGE_PLUS_READ            | _             | call: &[u8]     | _  |,
    | 0x07 | ZONE_CONFIG               | write: u16    | read: u16       | 2  |,
    | 0x08 | ZONE_ACTIVE               | write: u16    | read: u16       | 2  |,
    | 0x09 | _                         | _             | _               | _  |,
    | 0x0A | _                         | _             | _               | _  |,
    | 0x0B | _                         | _             | _               | _  |,
    | 0x0C | _                         | _             | _               | _  |,
    | 0x0D | _                         | _             | _               | _  |,
    | 0x0E | _                         | _             | _               | _  |,
    | 0x0F | _                         | _             | _               | _  |,
    | 0x10 | WRITE_PROTECT             | write: u8     | read: u8        | 1  |,
    | 0x11 | STORE_DEFAULT_ALL         | send          | _               | 0  |,
    | 0x12 | RESTORE_DEFAULT_ALL       | send          | _               | 0  |,
    | 0x13 | STORE_DEFAULT_CODE        | write: u8     | _               | 1  |,
    | 0x14 | RESTORE_DEFAULT_CODE      | write: u8     | _               | 1  |,
    | 0x15 | STORE_USER_ALL            | send          | _               | 0  |,
    | 0x16 | RESTORE_USER_ALL          | send          | _               | 0  |,
    | 0x17 | STORE_USER_CODE           | write: u8     | _               | 1  |,
    | 0x18 | RESTORE_USER_CODE         | write: u8     | _               | 1  |,
    | 0x19 | CAPABILITY                | _             | read: u8        | 1  |,
    | 0x1A | QUERY                     | _             | call: &[u8; 1]  | 1  |,
    | 0x1B | SMBALERT_MASK             | write: u16    | call: u16       | 2  |,
    | 0x1C | _                         | _             | _               | _  |,
    | 0x1D | _                         | _             | _               | _  |,
    | 0x1E | _                         | _             | _               | _  |,
    | 0x1F | _                         | _             | _               | _  |,
    | 0x20 | VOUT_MODE                 | write: u8     | read: u8        | 1  |,
    | 0x21 | VOUT_COMMAND              | write: u16    | read: u16       | 2  |,
    | 0x22 | VOUT_TRIM                 | write: u16    | read: u16       | 2  |,
    | 0x23 | VOUT_CAL_OFFSET           | write: u16    | read: u16       | 2  |,
    | 0x24 | VOUT_MAX                  | write: u16    | read: u16       | 2  |,
    | 0x25 | VOUT_MARGIN_HIGH          | write: u16    | read: u16       | 2  |,
    | 0x26 | VOUT_MARGIN_LOW           | write: u16    | read: u16       | 2  |,
    | 0x27 | VOUT_TRANSITION_RATE      | write: u16    | read: u16       | 2  |,
    | 0x28 | VOUT_DROOP                | write: u16    | read: u16       | 2  |,
    | 0x29 | VOUT_SCALE_LOOP           | write: u16    | read: u16       | 2  |,
    | 0x2A | VOUT_SCALE_MONITOR        | write: u16    | read: u16       | 2  |,
    | 0x2B | VOUT_MIN                  | write: u16    | read: u16       | 2  |,
    | 0x2C | _                         | _             | _               | _  |,
    | 0x2D | _                         | _             | _               | _  |,
    | 0x2E | _                         | _             | _               | _  |,
    | 0x2F | _                         | _             | _               | _  |,
    | 0x30 | COEFFICIENTS              | _             | call: &[u8; 5]  | 5  |,
    | 0x31 | POUT_MAX                  | write: u16    | read: u16       | 2  |,
    | 0x32 | MAX_DUTY                  | write: u16    | read: u16       | 2  |,
    | 0x33 | FREQUENCY_SWITCH          | write: u16    | read: u16       | 2  |,
    | 0x34 | POWER_MODE                | write: u8     | read: u8        | 1  |,
    | 0x35 | VIN_ON                    | write: u16    | read: u16       | 2  |,
    | 0x36 | VIN_OFF                   | write: u16    | read: u16       | 2  |,
    | 0x37 | INTERLEAVE                | write: u16    | read: u16       | 2  |,
    | 0x38 | IOUT_CAL_GAIN             | write: u16    | read: u16       | 2  |,
    | 0x39 | IOUT_CAL_OFFSET           | write: u16    | read: u16       | 2  |,
    | 0x3A | FAN_CONFIG_1_2            | write: u8     | read: u8        | 1  |,
    | 0x3B | FAN_COMMAND_1             | write: u16    | read: u16       | 2  |,
    | 0x3C | FAN_COMMAND_2             | write: u16    | read: u16       | 2  |,
    | 0x3D | FAN_CONFIG_3_4            | write: u8     | read: u8        | 1  |,
    | 0x3E | FAN_COMMAND_3             | write: u16    | read: u16       | 2  |,
    | 0x3F | FAN_COMMAND_4             | write: u16    | read: u16       | 2  |,
    | 0x40 | VOUT_OV_FAULT_LIMIT       | write: u16    | read: u16       | 2  |,
    | 0x41 | VOUT_OV_FAULT_RESPONSE    | write: u8     | read: u8        | 1  |,
    | 0x42 | VOUT_OV_WARN_LIMIT        | write: u16    | read: u16       | 2  |,
    | 0x43 | VOUT_UV_WARN_LIMIT        | write: u16    | read: u16       | 2  |,
    | 0x44 | VOUT_UV_FAULT_LIMIT       | write: u16    | read: u16       | 2  |,
    | 0x45 | VOUT_UV_FAULT_RESPONSE    | write: u8     | read: u8        | 1  |,
    | 0x46 | IOUT_OC_FAULT_LIMIT       | write: u16    | read: u16       | 2  |,
    | 0x47 | IOUT_OC_FAULT_RESPONSE    | write: u8     | read: u8        | 1  |,
    | 0x48 | IOUT_OC_LV_FAULT_LIMIT    | write: u16    | read: u16       | 2  |,
    | 0x49 | IOUT_OC_LV_FAULT_RESPONSE | write: u8     | read: u8        | 1  |,
    | 0x4A | IOUT_OC_WARN_LIMIT        | write: u16    | read: u16       | 2  |,
    | 0x4B | IOUT_UC_FAULT_LIMIT       | write: u16    | read: u16       | 2  |,
    | 0x4C | IOUT_UC_FAULT_RESPONSE    | write: u8     | read: u8        | 1  |,
    | 0x4D | _                         | _             | _               | _  |,
    | 0x4E | _                         | _             | _               | _  |,
    | 0x4F | OT_FAULT_LIMIT            | write: u16    | read: u16       | 2  |,
    | 0x50 | OT_FAULT_RESPONSE         | write: u8     | read: u8        | 1  |,
    | 0x51 | OT_WARN_LIMIT             | write: u16    | read: u16       | 2  |,
    | 0x52 | UT_WARN_LIMIT             | write: u16    | read: u16       | 2  |,
    | 0x53 | UT_FAULT_LIMIT            | write: u16    | read: u16       | 2  |,
    | 0x54 | UT_FAULT_RESPONSE         | write: u8     | read: u8        | 1  |,
    | 0x55 | VIN_OV_FAULT_LIMIT        | write: u16    | read: u16       | 2  |,
    | 0x56 | VIN_OV_FAULT_RESPONSE     | write: u8     | read: u8        | 1  |,
    | 0x57 | VIN_OV_WARN_LIMIT         | write: u16    | read: u16       | 2  |,
    | 0x58 | VIN_UV_WARN_LIMIT         | write: u16    | read: u16       | 2  |,
    | 0x59 | VIN_UV_FAULT_LIMIT        | write: u16    | read: u16       | 2  |,
    | 0x5A | VIN_UV_FAULT_RESPONSE     | write: u8     | read: u8        | 1  |,
    | 0x5B | IIN_OC_FAULT_LIMIT        | write: u16    | read: u16       | 2  |,
    | 0x5C | IIN_OC_FAULT_RESPONSE     | write: u8     | read: u8        | 1  |,
    | 0x5D | IIN_OC_WARN_LIMIT         | write: u16    | read: u16       | 2  |,
    | 0x5E | POWER_GOOD_ON             | write: u16    | read: u16       | 2  |,
    | 0x5F | POWER_GOOD_OFF            | write: u16    | read: u16       | 2  |,
    | 0x60 | TON_DELAY                 | write: u16    | read: u16       | 2  |,
    | 0x61 | TON_RISE                  | write: u16    | read: u16       | 2  |,
    | 0x62 | TON_MAX_FAULT_LIMIT       | write: u16    | read: u16       | 2  |,
    | 0x63 | TON_MAX_FAULT_RESPONSE    | write: u8     | read: u8        | 1  |,
    | 0x64 | TOFF_DELAY                | write: u16    | read: u16       | 2  |,
    | 0x65 | TOFF_FALL                 | write: u16    | read: u16       | 2  |,
    | 0x66 | TOFF_MAX_WARN_LIMIT       | write: u16    | read: u16       | 2  |,
    | 0x67 | _                         | _             | _               | _  |, // (Was Used In Revision 1.0),
    | 0x68 | POUT_OP_FAULT_LIMIT       | write: u16    | read: u16       | 2  |,
    | 0x69 | POUT_OP_FAULT_RESPONSE    | write: u8     | read: u8        | 1  |,
    | 0x6A | POUT_OP_WARN_LIMIT        | write: u16    | read: u16       | 2  |,
    | 0x6B | PIN_OP_WARN_LIMIT         | write: u16    | read: u16       | 2  |,
    | 0x6C | _                         | _             | _               | _  |,
    | 0x6D | _                         | _             | _               | _  |,
    | 0x6E | _                         | _             | _               | _  |,
    | 0x6F | _                         | _             | _               | _  |,
    | 0x70 | _                         | _             | _               | _  |, // (Test Input Fuse A),
    | 0x71 | _                         | _             | _               | _  |, // (Test Input Fuse B),
    | 0x72 | _                         | _             | _               | _  |, // (Test Input OR-ing A),
    | 0x73 | _                         | _             | _               | _  |, // (Test Input OR-ing B),
    | 0x74 | _                         | _             | _               | _  |, // (Test Output OR-ing),
    | 0x75 | _                         | _             | _               | _  |,
    | 0x76 | _                         | _             | _               | _  |,
    | 0x77 | _                         | _             | _               | _  |,
    | 0x78 | STATUS_BYTE               | write: u8     | read: u8        | 1  |,
    | 0x79 | STATUS_WORD               | write: u16    | read: u16       | 2  |,
    | 0x7A | STATUS_VOUT               | write: u8     | read: u8        | 1  |,
    | 0x7B | STATUS_IOUT               | write: u8     | read: u8        | 1  |,
    | 0x7C | STATUS_INPUT              | write: u8     | read: u8        | 1  |,
    | 0x7D | STATUS_TEMPERATURE        | write: u8     | read: u8        | 1  |,
    | 0x7E | STATUS_CML                | write: u8     | read: u8        | 1  |,
    | 0x7F | STATUS_OTHER              | write: u8     | read: u8        | 1  |,
    | 0x80 | STATUS_MFR_SPECIFIC       | write: u8     | read: u8        | 1  |,
    | 0x81 | STATUS_FANS_1_2           | write: u8     | read: u8        | 1  |,
    | 0x82 | STATUS_FANS_3_4           | write: u8     | read: u8        | 1  |,
    | 0x83 | READ_KWH_IN               | _             | read: Vec<u8>   | 4  |,
    | 0x84 | READ_KWH_OUT              | _             | read: Vec<u8>   | 4  |,
    | 0x85 | READ_KWH_CONFIG           | write: u16    | read: u16       | 2  |,
    | 0x86 | READ_EIN                  | _             | read: Vec<u8>   | 5  |,
    | 0x87 | READ_EOUT                 | _             | read: Vec<u8>   | 5  |,
    | 0x88 | READ_VIN                  | _             | read: u16       | 2  |,
    | 0x89 | READ_IIN                  | _             | read: u16       | 2  |,
    | 0x8A | READ_VCAP                 | _             | read: u16       | 2  |,
    | 0x8B | READ_VOUT                 | _             | read: u16       | 2  |,
    | 0x8C | READ_IOUT                 | _             | read: u16       | 2  |,
    | 0x8D | READ_TEMPERATURE_1        | _             | read: u16       | 2  |,
    | 0x8E | READ_TEMPERATURE_2        | _             | read: u16       | 2  |,
    | 0x8F | READ_TEMPERATURE_3        | _             | read: u16       | 2  |,
    | 0x90 | READ_FAN_SPEED_1          | _             | read: u16       | 2  |,
    | 0x91 | READ_FAN_SPEED_2          | _             | read: u16       | 2  |,
    | 0x92 | READ_FAN_SPEED_3          | _             | read: u16       | 2  |,
    | 0x93 | READ_FAN_SPEED_4          | _             | read: u16       | 2  |,
    | 0x94 | READ_DUTY_CYCLE           | _             | read: u16       | 2  |,
    | 0x95 | READ_FREQUENCY            | _             | read: u16       | 2  |,
    | 0x96 | READ_POUT                 | _             | read: u16       | 2  |,
    | 0x97 | READ_PIN                  | _             | read: u16       | 2  |,
    | 0x98 | PMBUS_REVISION            | _             | read: u8        | 1  |,
    | 0x99 | MFR_ID                    | write: &[u8]  | read: Vec<u8>   | _  |,
    | 0x9A | MFR_MODEL                 | write: &[u8]  | read: Vec<u8>   | _  |,
    | 0x9B | MFR_REVISION              | write: &[u8]  | read: Vec<u8>   | _  |,
    | 0x9C | MFR_LOCATION              | write: &[u8]  | read: Vec<u8>   | _  |,
    | 0x9D | MFR_DATE                  | write: &[u8]  | read: Vec<u8>   | _  |,
    | 0x9E | MFR_SERIAL                | write: &[u8]  | read: Vec<u8>   | _  |,
    | 0x9F | APP_PROFILE_SUPPORT       | _             | read: Vec<u8>   | _  |,
    | 0xA0 | MFR_VIN_MIN               | _             | read: u16       | 2  |,
    | 0xA1 | MFR_VIN_MAX               | _             | read: u16       | 2  |,
    | 0xA2 | MFR_IIN_MAX               | _             | read: u16       | 2  |,
    | 0xA3 | MFR_PIN_MAX               | _             | read: u16       | 2  |,
    | 0xA4 | MFR_VOUT_MIN              | _             | read: u16       | 2  |,
    | 0xA5 | MFR_VOUT_MAX              | _             | read: u16       | 2  |,
    | 0xA6 | MFR_IOUT_MAX              | _             | read: u16       | 2  |,
    | 0xA7 | MFR_POUT_MAX              | _             | read: u16       | 2  |,
    | 0xA8 | MFR_TAMBIENT_MAX          | _             | read: u16       | 2  |,
    | 0xA9 | MFR_TAMBIENT_MIN          | _             | read: u16       | 2  |,
    | 0xAA | MFR_EFFICIENCY_LL         | _             | read: Vec<u8>   | 14 |,
    | 0xAB | MFR_EFFICIENCY_HL         | _             | read: Vec<u8>   | 14 |,
    | 0xAC | MFR_PIN_ACCURACY          | _             | read: u8        | 1  |,
    | 0xAD | IC_DEVICE_ID              | _             | read: Vec<u8>   | _  |,
    | 0xAE | IC_DEVICE_REV             | _             | read: Vec<u8>   | _  |,
    | 0xAF | _                         | _             | _               | _  |,
    | 0xB0 | USER_DATA_00              | write: &[u8]  | read: Vec<u8>   | _  |,
    | 0xB1 | USER_DATA_01              | write: &[u8]  | read: Vec<u8>   | _  |,
    | 0xB2 | USER_DATA_02              | write: &[u8]  | read: Vec<u8>   | _  |,
    | 0xB3 | USER_DATA_03              | write: &[u8]  | read: Vec<u8>   | _  |,
    | 0xB4 | USER_DATA_04              | write: &[u8]  | read: Vec<u8>   | _  |,
    | 0xB5 | USER_DATA_05              | write: &[u8]  | read: Vec<u8>   | _  |,
    | 0xB6 | USER_DATA_06              | write: &[u8]  | read: Vec<u8>   | _  |,
    | 0xB7 | USER_DATA_07              | write: &[u8]  | read: Vec<u8>   | _  |,
    | 0xB8 | USER_DATA_08              | write: &[u8]  | read: Vec<u8>   | _  |,
    | 0xB9 | USER_DATA_09              | write: &[u8]  | read: Vec<u8>   | _  |,
    | 0xBA | USER_DATA_10              | write: &[u8]  | read: Vec<u8>   | _  |,
    | 0xBB | USER_DATA_11              | write: &[u8]  | read: Vec<u8>   | _  |,
    | 0xBC | USER_DATA_12              | write: &[u8]  | read: Vec<u8>   | _  |,
    | 0xBD | USER_DATA_13              | write: &[u8]  | read: Vec<u8>   | _  |,
    | 0xBE | USER_DATA_14              | write: &[u8]  | read: Vec<u8>   | _  |,
    | 0xBF | USER_DATA_15              | write: &[u8]  | read: Vec<u8>   | _  |,
    | 0xC0 | MFR_MAX_TEMP_1            | write: u16    | read: u16       | 2  |,
    | 0xC1 | MFR_MAX_TEMP_2            | write: u16    | read: u16       | 2  |,
    | 0xC2 | MFR_MAX_TEMP_3            | write: u16    | read: u16       | 2  |,
    | 0xC3 | _                         | _             | _               | _  |,
    | 0xC4 | MFR_SPECIFIC_C4           | !             | !               | !  |,
    | 0xC5 | MFR_SPECIFIC_C5           | !             | !               | !  |,
    | 0xC6 | MFR_SPECIFIC_C6           | !             | !               | !  |,
    | 0xC7 | MFR_SPECIFIC_C7           | !             | !               | !  |,
    | 0xC8 | MFR_SPECIFIC_C8           | !             | !               | !  |,
    | 0xC9 | MFR_SPECIFIC_C9           | !             | !               | !  |,
    | 0xCA | MFR_SPECIFIC_CA           | !             | !               | !  |,
    | 0xCB | MFR_SPECIFIC_CB           | !             | !               | !  |,
    | 0xCC | MFR_SPECIFIC_CC           | !             | !               | !  |,
    | 0xCD | MFR_SPECIFIC_CD           | !             | !               | !  |,
    | 0xCE | MFR_SPECIFIC_CE           | !             | !               | !  |,
    | 0xCF | MFR_SPECIFIC_CF           | !             | !               | !  |,
    | 0xD0 | MFR_SPECIFIC_D0           | !             | !               | !  |,
    | 0xD1 | MFR_SPECIFIC_D1           | !             | !               | !  |,
    | 0xD2 | MFR_SPECIFIC_D2           | !             | !               | !  |,
    | 0xD3 | MFR_SPECIFIC_D3           | !             | !               | !  |,
    | 0xD4 | MFR_SPECIFIC_D4           | !             | !               | !  |,
    | 0xD5 | MFR_SPECIFIC_D5           | !             | !               | !  |,
    | 0xD6 | MFR_SPECIFIC_D6           | !             | !               | !  |,
    | 0xD7 | MFR_SPECIFIC_D7           | !             | !               | !  |,
    | 0xD8 | MFR_SPECIFIC_D8           | !             | !               | !  |,
    | 0xD9 | MFR_SPECIFIC_D9           | !             | !               | !  |,
    | 0xDA | MFR_SPECIFIC_DA           | !             | !               | !  |,
    | 0xDB | MFR_SPECIFIC_DB           | !             | !               | !  |,
    | 0xDC | MFR_SPECIFIC_DC           | !             | !               | !  |,
    | 0xDD | MFR_SPECIFIC_DD           | !             | !               | !  |,
    | 0xDE | MFR_SPECIFIC_DE           | !             | !               | !  |,
    | 0xDF | MFR_SPECIFIC_DF           | !             | !               | !  |,
    | 0xE0 | MFR_SPECIFIC_E0           | !             | !               | !  |,
    | 0xE1 | MFR_SPECIFIC_E1           | !             | !               | !  |,
    | 0xE2 | MFR_SPECIFIC_E2           | !             | !               | !  |,
    | 0xE3 | MFR_SPECIFIC_E3           | !             | !               | !  |,
    | 0xE4 | MFR_SPECIFIC_E4           | !             | !               | !  |,
    | 0xE5 | MFR_SPECIFIC_E5           | !             | !               | !  |,
    | 0xE6 | MFR_SPECIFIC_E6           | !             | !               | !  |,
    | 0xE7 | MFR_SPECIFIC_E7           | !             | !               | !  |,
    | 0xE8 | MFR_SPECIFIC_E8           | !             | !               | !  |,
    | 0xE9 | MFR_SPECIFIC_E9           | !             | !               | !  |,
    | 0xEA | MFR_SPECIFIC_EA           | !             | !               | !  |,
    | 0xEB | MFR_SPECIFIC_EB           | !             | !               | !  |,
    | 0xEC | MFR_SPECIFIC_EC           | !             | !               | !  |,
    | 0xED | MFR_SPECIFIC_ED           | !             | !               | !  |,
    | 0xEE | MFR_SPECIFIC_EE           | !             | !               | !  |,
    | 0xEF | MFR_SPECIFIC_EF           | !             | !               | !  |,
    | 0xF0 | MFR_SPECIFIC_F0           | !             | !               | !  |,
    | 0xF1 | MFR_SPECIFIC_F1           | !             | !               | !  |,
    | 0xF2 | MFR_SPECIFIC_F2           | !             | !               | !  |,
    | 0xF3 | MFR_SPECIFIC_F3           | !             | !               | !  |,
    | 0xF4 | MFR_SPECIFIC_F4           | !             | !               | !  |,
    | 0xF5 | MFR_SPECIFIC_F5           | !             | !               | !  |,
    | 0xF6 | MFR_SPECIFIC_F6           | !             | !               | !  |,
    | 0xF7 | MFR_SPECIFIC_F7           | !             | !               | !  |,
    | 0xF8 | MFR_SPECIFIC_F8           | !             | !               | !  |,
    | 0xF9 | MFR_SPECIFIC_F9           | !             | !               | !  |,
    | 0xFA | MFR_SPECIFIC_FA           | !             | !               | !  |,
    | 0xFB | MFR_SPECIFIC_FB           | !             | !               | !  |,
    | 0xFC | MFR_SPECIFIC_FC           | !             | !               | !  |,
    | 0xFD | MFR_SPECIFIC_FD           | !             | !               | !  |,
    | 0xFE | MFR_SPECIFIC_COMMAND_EXT  | !             | !               | !  |,
    | 0xFF | PMBUS_COMMAND_EXT         | !             | !               | !  |,
}
